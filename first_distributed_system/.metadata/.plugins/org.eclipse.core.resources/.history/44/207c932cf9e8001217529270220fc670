package server;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;

public class Server {
	
	Socket sSocket;
	String serverResponse = "";
	ServerSocket sServerSocket;
	String clientRequest;
	InputStream is;
	OutputStream os;

	public Server() {
		
	}

	public void setupServer() {
		try {
				sServerSocket = new ServerSocket(7823);
				sSocket = sServerSocket.accept();
			Thread clientConnection = new Thread() {
				public void run() {
					System.out.println("Server has started!");
					
					
					boolean isRunning = true;
					while(isRunning) {
						if(sSocket != null) {
							
							try {
								is = sSocket.getInputStream();
							} catch (IOException e) {
								// TODO Auto-generated catch block
								e.printStackTrace();
							}
							InputStreamReader clientStream = new InputStreamReader(is);
							BufferedReader buffRead = new BufferedReader(clientStream);
			//				if(buffRead.ready()) {
								
								try {
									clientRequest = buffRead.readLine();
								} catch (IOException e) {
									// TODO Auto-generated catch block
									e.printStackTrace();
								}
								
								int choice = Integer.parseInt("" + clientRequest.toCharArray()[2]);
								
								MathLogic logic = new MathLogic();
								if(choice == 1) {
									System.out.println(logic.add(Integer.parseInt("" +clientRequest.toCharArray()[0]), Integer.parseInt("" + clientRequest.toCharArray()[1])));
									serverResponse = "Your addition summed to " + logic.add(Integer.parseInt("" +clientRequest.toCharArray()[0]), Integer.parseInt("" + clientRequest.toCharArray()[1]));
									
									//To client now//
									
									try {
										os = sSocket.getOutputStream();
									} catch (IOException e) {
										// TODO Auto-generated catch block
										e.printStackTrace();
									}
									PrintWriter osw = new PrintWriter(os);
									System.out.println("Creating the message from the server to send to the client.");
									osw.write(serverResponse);
									System.out.println("Server is writing message.");
									osw.flush();
									//Done sending to client//
									
//									isRunning = false;
								}
								else if(choice == 2) {
									System.out.println(logic.subtract(Integer.parseInt("" +clientRequest.toCharArray()[0]), Integer.parseInt("" + clientRequest.toCharArray()[1])));
									serverResponse = "The answer for the subtraction is " + logic.add(Integer.parseInt("" +clientRequest.toCharArray()[0]), Integer.parseInt("" + clientRequest.toCharArray()[1]));
									
									//To client now//
									try {
										os = sSocket.getOutputStream();
									} catch (IOException e) {
										// TODO Auto-generated catch block
										e.printStackTrace();
									}
									PrintWriter osw = new PrintWriter(os);
									System.out.println("Creating the message from the server to send to the client.");
									osw.write(serverResponse);
									System.out.println("Server is writing message.");
									osw.flush();
									try {
										sSocket.shutdownOutput();
									} catch (IOException e) {
										// TODO Auto-generated catch block
										e.printStackTrace();
									}
									//Done sending to client//
									
//									isRunning = false;
								}
			//				}
						}
					}
					
					System.out.println("The server has stopped!");
				}
			};
			
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}
